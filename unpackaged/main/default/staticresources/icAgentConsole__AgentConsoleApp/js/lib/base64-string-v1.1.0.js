var Base64String={compressToUTF16:function(input){var i,c,current,output="",status=0;for(input=this.compress(input),i=0;i<input.length;i++)switch(c=input.charCodeAt(i),status++){case 0:output+=String.fromCharCode(32+(c>>1)),current=(1&c)<<14;break;case 1:output+=String.fromCharCode(current+(c>>2)+32),current=(3&c)<<13;break;case 2:output+=String.fromCharCode(current+(c>>3)+32),current=(7&c)<<12;break;case 3:output+=String.fromCharCode(current+(c>>4)+32),current=(15&c)<<11;break;case 4:output+=String.fromCharCode(current+(c>>5)+32),current=(31&c)<<10;break;case 5:output+=String.fromCharCode(current+(c>>6)+32),current=(63&c)<<9;break;case 6:output+=String.fromCharCode(current+(c>>7)+32),current=(127&c)<<8;break;case 7:output+=String.fromCharCode(current+(c>>8)+32),current=(255&c)<<7;break;case 8:output+=String.fromCharCode(current+(c>>9)+32),current=(511&c)<<6;break;case 9:output+=String.fromCharCode(current+(c>>10)+32),current=(1023&c)<<5;break;case 10:output+=String.fromCharCode(current+(c>>11)+32),current=(2047&c)<<4;break;case 11:output+=String.fromCharCode(current+(c>>12)+32),current=(4095&c)<<3;break;case 12:output+=String.fromCharCode(current+(c>>13)+32),current=(8191&c)<<2;break;case 13:output+=String.fromCharCode(current+(c>>14)+32),current=(16383&c)<<1;break;case 14:output+=String.fromCharCode(current+(c>>15)+32,32+(32767&c)),status=0}return output+String.fromCharCode(current+32)},decompressFromUTF16:function(input){for(var current,c,output="",status=0,i=0;i<input.length;){switch(c=input.charCodeAt(i)-32,status++){case 0:current=c<<1;break;case 1:output+=String.fromCharCode(current|c>>14),current=(16383&c)<<2;break;case 2:output+=String.fromCharCode(current|c>>13),current=(8191&c)<<3;break;case 3:output+=String.fromCharCode(current|c>>12),current=(4095&c)<<4;break;case 4:output+=String.fromCharCode(current|c>>11),current=(2047&c)<<5;break;case 5:output+=String.fromCharCode(current|c>>10),current=(1023&c)<<6;break;case 6:output+=String.fromCharCode(current|c>>9),current=(511&c)<<7;break;case 7:output+=String.fromCharCode(current|c>>8),current=(255&c)<<8;break;case 8:output+=String.fromCharCode(current|c>>7),current=(127&c)<<9;break;case 9:output+=String.fromCharCode(current|c>>6),current=(63&c)<<10;break;case 10:output+=String.fromCharCode(current|c>>5),current=(31&c)<<11;break;case 11:output+=String.fromCharCode(current|c>>4),current=(15&c)<<12;break;case 12:output+=String.fromCharCode(current|c>>3),current=(7&c)<<13;break;case 13:output+=String.fromCharCode(current|c>>2),current=(3&c)<<14;break;case 14:output+=String.fromCharCode(current|c>>1),current=(1&c)<<15;break;case 15:output+=String.fromCharCode(current|c),status=0}i++}return this.decompress(output)},_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",decompress:function(input){for(var chr1,chr2,chr3,enc1,enc2,enc3,enc4,output="",i=1,odd=input.charCodeAt(0)>>8;i<2*input.length&&(i<2*input.length-1||0==odd);)i%2==0?(chr1=input.charCodeAt(i/2)>>8,chr2=255&input.charCodeAt(i/2),chr3=i/2+1<input.length?input.charCodeAt(i/2+1)>>8:NaN):(chr1=255&input.charCodeAt((i-1)/2),(i+1)/2<input.length?(chr2=input.charCodeAt((i+1)/2)>>8,chr3=255&input.charCodeAt((i+1)/2)):chr2=chr3=NaN),i+=3,enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)||i==2*input.length+1&&odd?enc3=enc4=64:(isNaN(chr3)||i==2*input.length&&odd)&&(enc4=64),output=output+this._keyStr.charAt(enc1)+this._keyStr.charAt(enc2)+this._keyStr.charAt(enc3)+this._keyStr.charAt(enc4);return output},compress:function(input){var output_,chr1,chr2,chr3,enc2,enc3,enc4,output="",ol=1,i=0,flush=!1;for(input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");i<input.length;)chr1=this._keyStr.indexOf(input.charAt(i++))<<2|(enc2=this._keyStr.indexOf(input.charAt(i++)))>>4,chr2=(15&enc2)<<4|(enc3=this._keyStr.indexOf(input.charAt(i++)))>>2,chr3=(3&enc3)<<6|(enc4=this._keyStr.indexOf(input.charAt(i++))),ol%2==0?(output_=chr1<<8,flush=!0,64!=enc3&&(output+=String.fromCharCode(output_|chr2),flush=!1),64!=enc4&&(output_=chr3<<8,flush=!0)):(output+=String.fromCharCode(output_|chr1),flush=!1,64!=enc3&&(output_=chr2<<8,flush=!0),64!=enc4&&(output+=String.fromCharCode(output_|chr3),flush=!1)),ol+=3;return flush&&(output+=String.fromCharCode(output_),output=String.fromCharCode(256|output.charCodeAt(0))+output.substring(1)),output}};