!function($){var logger=IC_Common.getLogger("sideBarEmailControl");$.widget("AgentConsole.sideBarEmailControl",{options:{controller:null,resourceBase:"",isPopout:!1,contact:"",emailWidgetClick:function(){}},_create:function(){this.controller=this.options.controller},_init:function(){this.contact=this.options.contact,this.rootElement=$('<div class="emailCont" />').appendTo(this.element),this.emailWidget=$('<div class="emailContactWidget" />').emailContactControl({controller:this,resourceBase:this.options.resourceBase,isPopout:this.options.isPopout,emailWidgetClick:$.proxy(this.emailWidgetClick,this)}).appendTo(this.rootElement),"Parked"!==this.options.contact.status&&this.createResultAndNotes(this.contact)},search:function(searchPattern){this.emailWidget.emailContactControl("search",searchPattern)},refresh:function(contact){var skill=AgentConsoleDataStore.allSkillList[contact.skillId];this.contact=contact,this.emailWidget.emailContactControl("refresh",contact),"Parked"!==contact.status&&"Interrupted"!==contact.status||this.emailWidget.emailContactControl("setCornerAfterCall"),"Discarded"!==contact.status||!1!==contact.finalState||!IC_Validation.isValidObject(skill)||!0!==skill.useDisposition&&!0!==skill.reqDisposition||(this.controller.hideAllTabs(),this.controller.showHomeOrContactsRootPanel(),this.createDispositionPanel(contact,skill))},isTagsAssigned:function(skillId){return this.options.controller.isTagsAssigned(skillId)},enableDisableDiscardButton:function(enabled){this.emailWidget.emailContactControl("enableDisableDiscardButton",enabled)},enableDisbleBtnOnTransfer:function(isChatContactTransferClicked){this.emailWidget.emailContactControl("enableDisbleBtnOnTransfer",isChatContactTransferClicked)},updateContactIndicator:function(contactIndicator){this.emailWidget.emailContactControl("updateContactIndicator",AgentConsoleDataStore.indicators.contactIndicator)},statePnlClick:function(e){this.emailWidget.emailContactControl("statePnlClick",e)},setSelectedMode:function(){this.emailWidget.emailContactControl("setSelectedMode")},resetSelectedMode:function(){this.emailWidget.emailContactControl("resetSelectedMode")},updateControlPanel:function(){this.emailWidget.emailContactControl("updateControlPanel")},showContactStatePnl:function(){this.emailWidget.emailContactControl("showContactStatePnl")},getContact:function(){return this.emailWidget.emailContactControl("getContact")},resizePanel:function(isDialerPanel){this.emailWidget.emailContactControl("resizePanel",isDialerPanel)},getContentPanelHeight:function(){return this.options.controller.elements.contentPanel.height()-this.emailWidget.height()},getSkillDetails:function(skillId,callback){this.controller.getSkillDetails(skillId,callback)},OnAgentIndicatorUpdate:function(){this.controller.OnAgentIndicatorUpdate()},getChatContact:function(){this.controller.getChatContact()},showEmailInterruptOverlay:function(){this.controller.showEmailInterruptOverlay()},hideEmailInterruptOverlay:function(){this.controller.hideEmailInterruptOverlay()},showDispositionPanel:function(contactInfo){},onEmailContactTransfer:function(contactId){this.controller.onEmailContactTransfer(contactId)},onEmailContactEnd:function(contactId,isInbound){this.controller.onEmailContactEnd(contactId,isInbound)},callParkEmailonWidget:function(contactId){this.controller.callParkEmailonWidget(contactId)},parkEmail:function(contactInfo){this.controller.parkEmail(contactInfo)},unParkEmail:function(contactId,unparkNow){this.controller.unParkEmail(contactId,unparkNow)},agentInfo:function(){return this.options.controller.agentInfo},isAllTagsAddedtoContact:function(contactId){return this.options.controller.isAllTagsAddedtoContact(contactId)},createResultAndNotes:function(activeContact){this.contactResultPanel=$("<div />").appendTo(this.rootElement),this.contactResultNotesPanel=$('<div class="contactResultNotes callResultNotes"/>').appendTo(this.contactResultPanel),this.contactResultNotesPanel.resultsAndNotesControl({container:this,resourceBase:this.controller.options.resourceBase,contact:activeContact,sfMode:this.controller.options.sfMode,isPopout:this.controller.options.isPopout,agentInfo:this.controller.agentInfo})},agentInfo:function(){return this.options.controller.agentInfo},showContactResult:function(){IC_Validation.isValidObject(this.contactResultNotesPanel)&&"Interrupted"!==this.contact.status&&"Discarded"!==this.contact.status&&this.contactResultPanel.showfn()},hideContactResult:function(){IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.contactResultPanel.hide()},updateSfResult:function(sfResult){IC_Validation.isValidObject(this.contactResultNotesPanel)&&"block"===this.contactResultNotesPanel.css("display")&&this.contactResultNotesPanel.resultsAndNotesControl("updateData",sfResult),IC_Validation.isValidObject(this.contactResultNotesPanel)&&IC_Validation.isValidObject(this.dispPanel)&&this.dispositionPanel.disposition("updateData",sfResult)},updateTagsContent:function(contact){IC_Validation.isValidObject(this.contactResultNotesPanel)&&"block"===this.contactResultNotesPanel.css("display")&&this.contactResultNotesPanel.resultsAndNotesControl("updateTagsContent",contact),IC_Validation.isValidObject(this.contactResultNotesPanel)&&IC_Validation.isValidObject(this.dispositionPanel)&&this.dispositionPanel.disposition("updateTagsCount",contact,!0)},getContactId:function(){if(IC_Validation.isValidObject(this.contactResultPanel))return this.contactResultNotesPanel.resultsAndNotesControl("getContactId")},setContactId:function(contactId){this.options.contactId=contactId},updateIndicatorInResultsPnl:function(contact){IC_Validation.isNotNullOrEmpty(AgentConsoleDataStore.indicators)&&IC_Validation.isNotNullOrEmpty(AgentConsoleDataStore.indicators.contactIndicator)&&(IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.getContactId()===contact.id&&(logger.debug("ContactID: "+contact.id," OnAgentIndicatorUpdate - updating contact result panel"),this.contactResultNotesPanel.resultsAndNotesControl("updateIndicator",AgentConsoleDataStore.indicators.contactIndicator,contact.contactType),IC_Validation.isValidObject(this.dispPanel)&&"Discarded"===contact.status&&(this.dispositionPanel.disposition("resizeDispositionPanel"),this.dispositionPanel.disposition("renderCustomScrollBar",this.dispositionPanel,!0))))},getCurrentSelectedMediaTab:function(){return this.controller.getCurrentSelectedMediaTab()},createDispositionPanel:function(contact,skill){IC_Validation.isValidObject(this.dispPanel)||(this.dispPanel=$('<div class="endDispoPanel" />').appendTo(this.rootElement),this.dispositionPanel=$('<div class="dispositionPnlDialer" />').appendTo(this.dispPanel),this.dispositionPanel.disposition({container:this,resourceBase:this.controller.options.resourceBase,contact:contact,useSecDisposition:skill.useSecDispositions,reqDisposition:skill.reqDisposition}),this.dispositionPanel.showfn()),IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.contactResultNotesPanel.hide();var sfResult=AgentConsoleDataStore.getSfResult(contact.id);IC_Validation.isValidObject(sfResult)&&this.dispositionPanel.disposition("updateData",sfResult),this.dispositionPanel.disposition("populateDispositions",skill.dispositions,contact.type),this.options.controller.isTagsAssigned(contact.skillId)&&(this.dispositionPanel.disposition("updateTagsCount",contact,!0),this.dispositionPanel.disposition("updateDispositionTagData",contact)),this.dispositionPanel.disposition("resizeDispositionPanel"),this.dispositionPanel.disposition("renderCustomScrollBar",this.dispositionPanel,!0)},hideDispoPanel:function(){this.dispPanel.hide()},resizeContactWidget:function(){"Discarded"===this.contact.status&&IC_Validation.isValidObject(this.dispositionPanel)&&(this.dispositionPanel.disposition("resizeDispositionPanel"),this.dispositionPanel.disposition("renderCustomScrollBar",this.dispositionPanel,!0))},destroyContactResultPanel:function(canDestroyDispo){IC_Validation.isValidObject(this.dispPanel)&&!1!==canDestroyDispo&&(this.dispositionPanel.disposition("destroy"),this.dispPanel=null,delete this.dispPanel,this.emailWidget.emailContactControl("setCornerAfterCall"),this.controller.showHomeOrContactsRootPanel())},setAgentState:function(state){this.controller.setAgentState(state)},updateTagsforContact:function(contact){this.controller.updateTagsforContact(contact)},updateResultAndNotes:function(contact){if(IC_Validation.isValidObject(this.contactResultNotesPanel)&&"block"===this.contactResultNotesPanel.css("display")&&this.contactResultNotesPanel.resultsAndNotesControl("updateResultsNotesContent",contact),IC_Validation.isValidObject(this.contactResultNotesPanel)&&IC_Validation.isValidObject(this.dispPanel)){var sfResult=AgentConsoleDataStore.getSfResult(contact.id);IC_Validation.isValidObject(sfResult)&&this.dispositionPanel.disposition("updateData",sfResult)}},recordResultNotesPanel:function(contact){var sfResult,skill=AgentConsoleDataStore.allSkillList[contact.skillId];!IC_Validation.isValidObject(skill)||!0!==skill.useDisposition&&!0!==skill.reqDisposition||(logger.debug("Populate disposition in results and notes fired "),IC_Validation.isNotNullOrEmptyArray(skill.dispositions)&&(sfResult=AgentConsoleDataStore.getSfResult(contact.id),IC_Validation.isValidObject(sfResult)&&this.updateResultAndNotes(contact)))},endContact:function(contactId){this.controller.endContact(contactId)},getServerTimestamp:function(){return AgentConsoleDataStore.getServerTimestamp()},agentIndicatorAction:function(indicator){this.controller.agentIndicatorAction(indicator)},showRescheduleDateTime:function(contactId,dnis){this.controller.showRescheduleDateTime(contactId,dnis)},mediaTabs:function(){return this.controller.elements.mediaTabsDiv.height()},acceptContact:function(contactId){this.controller.acceptContact(contactId)},rejectContact:function(contactId){this.controller.rejectContact(contactId)},setDisposition:function(contactId,notesResult,callbackNumber){var that=this;IC_Validation.isValidObject(this.dispPanel)&&this.dispPanel.slideUp(250,function(){that.canRoundBottomCorners=!0,that.emailWidget.emailContactControl("setCornerAfterCall")}),this.controller.setDisposition(contactId,notesResult,callbackNumber)},onContactDestroy:function(contact,widgetReference){this.controller.onContactDestroy(contact,widgetReference)},contactResultChanged:function(contactId,changedData,value){this.controller.contactResultChanged(contactId,changedData,value)},doScreenPop:function(url,type){this.controller.doScreenPop(url,"",type)},isAllTagsAddedtoContact:function(contactId){return AgentConsoleDataStore.tags.isAllTagsAddedtoContact(contactId)},localeDateTimeFormat:function(){return this.controller.options.localeDateTimeFormat},localeDateFormat:function(){return this.controller.localeDateFormat},consoleOptions:function(){return this.controller.options},destroy:function(destroyImmediate){this.emailWidget.emailContactControl("destroy",destroyImmediate),IC_Validation.isValidObject(this.contactResultPanel)&&(this.contactResultNotesPanel="",this.dispositionPanel="",this.contactResultPanel.remove())}})}(jQuery);