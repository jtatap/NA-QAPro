!function($){var logger=IC_Common.getLogger("SideBarWorkItem");$.widget("AgentConsole.sideBarWorkItemControl",{options:{container:null,contact:null},callWidgets:{},_create:function(){this.container=this.options.container},_init:function(){this.contact=this.options.contact,this.rootElement=$('<div class="" />').appendTo(this.element),this.workItemWidget=$('<div class="" id="workItemContactWidget" />').workItemContactPanel({controller:this,resourceBase:this.container.options.resourceBase,canRoundTopCorners:!0,contact:this.options.contact,isPopout:this.options.isPopout}).appendTo(this.rootElement),this.canRoundBottomCorners=!1,this.updateData(this.contact),this.createResultAndNotes(this.contact)},updateData:function(contact){this.contact=contact;var skill=AgentConsoleDataStore.allSkillList[contact.skillId];if(this.workItemWidget.workItemContactPanel("updateData",this.contact),"Disconnected"===contact.status&&!1===contact.finalState){if(IC_Validation.isValidObject(skill)&&(!0===skill.useDisposition||!0===skill.reqDisposition)&&1==this.container.getContactsCount()){var isDispSumbit=contact.id===AgentConsoleDataStore.lastDispContactId;this.hideContactResult(),this.container.hideAllTabs(),this.container.showHomeOrContactsRootPanel(),!1===isDispSumbit&&this.createDispositionPanel(contact,skill)}}else IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.contactResultNotesPanel.resultsAndNotesControl("resetResultsNotes")},onMute:function(aInfoLgMuted){this.workItemWidget.workItemContactPanel("onMute",aInfoLgMuted)},setCanMask:function(agentInfoMask){this.workItemWidget.workItemContactPanel("setCanMask",agentInfoMask)},updatePanel:function(skillDetails){this.workItemWidget.workItemContactPanel("updatePanel",skillDetails)},updateView:function(canRoundTopCorner){this.workItemWidget.workItemContactPanel("updateView",{canRoundTopCorners:canRoundTopCorner,canRoundBottomCorners:this.canRoundBottomCorners})},updatePreviewNotesAndDisposition:function(skillDisposition,contactType){this.updatePreviewNotes(),this.workItemWidget.workItemContactPanel("updateDispositions",skillDisposition,contactType)},updatePreviewNotes:function(){this.workItemWidget.workItemContactPanel("updatePreviewNotes",AgentConsoleDataStore.pcPreviewNotes)},updateContactIndicator:function(){this.workItemWidget.workItemContactPanel("updateContactIndicator",AgentConsoleDataStore.indicators.contactIndicator)},showContactStatePnl:function(){this.workItemWidget.workItemContactPanel("showContactStatePnl")},getContact:function(){return this.workItemWidget.workItemContactPanel("getContact")},enableDisableCallBack:function(enableCallBack){this.workItemWidget.workItemContactPanel("enableDisableCallBack",enableCallBack)},resizePanel:function(isDialerPanel){this.workItemWidget.workItemContactPanel("resizePanel",isDialerPanel)},getContentPanelHeight:function(){return this.options.container.elements.contentPanel.height()-this.workItemWidget.height()},createResultAndNotes:function(activeContact){var firstContact=this.container.getFirstContactForContactResult();this.contactResultPanel=$("<div />").appendTo(this.rootElement),this.contactResultNotesPanel=$('<div class="contactResultNotes callResultNotes"/>').appendTo(this.contactResultPanel),this.contactResultNotesPanel.resultsAndNotesControl({container:this,resourceBase:this.container.options.resourceBase,contact:firstContact,sfMode:this.container.options.sfMode,isPopout:this.container.options.isPopout,agentInfo:this.container.agentInfo})},agentInfo:function(){return this.options.container.agentInfo},showContactResult:function(){IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.contactResultPanel.showfn()},hideContactResult:function(){IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.contactResultPanel.hide()},updateTagsforContact:function(contact){this.container.updateTagsforContact(contact)},setAgentState:function(state){this.container.setAgentState(state)},updateResultAndNotes:function(contact){if(IC_Validation.isValidObject(this.contactResultNotesPanel)&&"block"===this.contactResultNotesPanel.css("display")&&(this.contactResultNotesPanel.resultsAndNotesControl("updateResultsNotesContent",contact),this.contactResultNotesPanel.resultsAndNotesControl("setResultPanelHeight")),IC_Validation.isValidObject(this.contactResultNotesPanel)&&IC_Validation.isValidObject(this.dispPanel)){var sfResult=AgentConsoleDataStore.getSfResult(contact.id);IC_Validation.isValidObject(sfResult)&&this.dispositionPanel.disposition("updateData",sfResult)}},updateSfResult:function(sfResult){IC_Validation.isValidObject(this.contactResultNotesPanel)&&"block"===this.contactResultNotesPanel.css("display")&&this.contactResultNotesPanel.resultsAndNotesControl("updateData",sfResult),IC_Validation.isValidObject(this.contactResultNotesPanel)&&IC_Validation.isValidObject(this.dispPanel)&&this.dispositionPanel.disposition("updateData",sfResult)},updateTagsContent:function(contact){IC_Validation.isValidObject(this.contactResultNotesPanel)&&"block"===this.contactResultNotesPanel.css("display")&&this.contactResultNotesPanel.resultsAndNotesControl("updateTagsContent",contact),IC_Validation.isValidObject(this.contactResultNotesPanel)&&IC_Validation.isValidObject(this.dispositionPanel)&&this.dispositionPanel.disposition("updateTagsCount",contact,!0)},getContactId:function(){if(IC_Validation.isValidObject(this.contactResultPanel))return this.contactResultNotesPanel.resultsAndNotesControl("getContactId")},setContactId:function(contactId){this.options.contactId=contactId},contactIndicatorResizeResult:function(showIndicator,contactId){this.container.contactIndicatorResizeResult(showIndicator,contactId)},updateIndicatorInResultsPnl:function(contact){IC_Validation.isNotNullOrEmpty(AgentConsoleDataStore.indicators)&&IC_Validation.isNotNullOrEmpty(AgentConsoleDataStore.indicators.contactIndicator)&&(IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.getContactId()===contact.id&&(logger.debug("ContactID: "+contact.id," OnAgentIndicatorUpdate - updating contact result panel"),this.contactResultNotesPanel.resultsAndNotesControl("updateIndicator",AgentConsoleDataStore.indicators.contactIndicator,contact.contactType),this.contactResultNotesPanel.resultsAndNotesControl("resetResultsNotes"),IC_Validation.isValidObject(this.dispPanel)&&"Disconnected"===contact.status&&(this.dispositionPanel.disposition("resizeDispositionPanel"),this.dispositionPanel.disposition("renderCustomScrollBar",this.dispositionPanel,!0))))},resizeContactWidget:function(){"Disconnected"===this.contact.status?IC_Validation.isValidObject(this.dispositionPanel)&&(this.dispositionPanel.disposition("resizeDispositionPanel"),this.dispositionPanel.disposition("renderCustomScrollBar",this.dispositionPanel,!0)):this.contactResultNotesPanel.resultsAndNotesControl("resetResultsNotes")},createDispositionPanel:function(contact,skill){IC_Validation.isValidObject(this.dispPanel)||(this.dispPanel=$('<div class="endDispoPanel" />').appendTo(this.rootElement),this.dispositionPanel=$('<div class="dispositionPnlDialer" />').appendTo(this.dispPanel),this.dispositionPanel.disposition({container:this,resourceBase:this.container.options.resourceBase,contact:contact,useSecDisposition:skill.useSecDispositions,reqDisposition:skill.reqDisposition}),this.dispositionPanel.showfn()),IC_Validation.isValidObject(this.contactResultNotesPanel)&&this.contactResultNotesPanel.hide();var sfResult=AgentConsoleDataStore.getSfResult(contact.id);IC_Validation.isValidObject(sfResult)&&this.dispositionPanel.disposition("updateData",sfResult),this.dispositionPanel.disposition("populateDispositions",skill.dispositions,contact.type),this.isTagsAssigned(contact.skillId)&&(this.dispositionPanel.disposition("updateTagsCount",contact,!0),this.dispositionPanel.disposition("updateDispositionTagData",contact)),this.dispositionPanel.disposition("resizeDispositionPanel"),this.dispositionPanel.disposition("renderCustomScrollBar",this.dispositionPanel,!0)},isTagsAssigned:function(skillId){return this.options.container.isTagsAssigned(skillId)},destroyContactResultPanel:function(){IC_Validation.isValidObject(this.dispPanel)&&(this.dispositionPanel.disposition("destroy"),this.dispPanel=null,delete this.dispPanel,this.canRoundBottomCorners=!0,this.updateView(!0),this.container.showHomeOrContactsRootPanel())},recordResultNotesPanel:function(contact){var sfResult,skill=AgentConsoleDataStore.allSkillList[contact.skillId];!IC_Validation.isValidObject(skill)||!0!==skill.useDisposition&&!0!==skill.reqDisposition||(logger.debug("Populate disposition in results and notes fired "),IC_Validation.isNotNullOrEmptyArray(skill.dispositions)&&(sfResult=AgentConsoleDataStore.getSfResult(contact.id),IC_Validation.isValidObject(sfResult)&&this.updateResultAndNotes(contact)))},disposeBadNumberCall:function(contactId,type){this.container.disposeBadNumberCall(contactId,type)},onWorkItemTransfer:function(workItemId){this.container.onWorkItemTransfer(workItemId)},transferWorkItemToSkill:function(workItemId){this.container.transferWorkItemToSkill(workItemId)},resumeContact:function(contactId){this.container.resumeContact(contactId)},holdContact:function(contactId,onSuccessCallback){this.container.holdContact(contactId,onSuccessCallback)},endContact:function(contactId){this.container.endContact(contactId)},maskCallRecording:function(contactId){this.container.maskCallRecording(contactId)},unmaskCallRecording:function(contactId){this.container.unmaskCallRecording(contactId)},recordCall:function(contactId){this.container.recordCall(contactId)},addCallCommitment:function(callInfo){this.container.addCallCommitment(callInfo)},hasOutBoundPhoneSkill:function(){return this.container.hasOutBoundPhoneSkill()},getServerTimestamp:function(){return AgentConsoleDataStore.getServerTimestamp()},agentIndicatorAction:function(indicator){this.container.agentIndicatorAction(indicator)},pcPreviewNotesUpdate:function(data,isSet){this.container.pcPreviewNotesUpdate(data,isSet)},showRescheduleDateTime:function(contactId,dnis){this.container.showRescheduleDateTime(contactId,dnis)},mediaTabs:function(){return this.container.elements.mediaTabsDiv.height()},acceptContact:function(contactId){this.container.acceptContact(contactId)},rejectContact:function(contactId){this.container.rejectContact(contactId)},snoozeContact:function(contactId){this.container.snoozeContact(contactId)},setDisposition:function(contactId,notesResult,callbackNumber){var that=this;IC_Validation.isValidObject(this.dispPanel)&&this.dispPanel.slideUp(250,function(){that.canRoundBottomCorners=!0,that.workItemWidget.workItemContactPanel("setCornerAfterCall")}),this.container.setDisposition(contactId,notesResult,callbackNumber)},onContactDestroy:function(contact,widgetReference){this.container.onContactDestroy(contact,widgetReference)},contactResultChanged:function(contactId,changedData,value){this.container.contactResultChanged(contactId,changedData,value)},doScreenPop:function(url,type){this.container.doScreenPop(url,type)},isAllTagsAddedtoContact:function(contactId){return AgentConsoleDataStore.tags.isAllTagsAddedtoContact(contactId)},localeDateTimeFormat:function(){return this.container.localeDateTimeFormat},localeDateFormat:function(){return this.container.localeDateFormat},consoleOptions:function(){return this.container.options},enableDisbleBtnOnTransfer:function(isTransferClicked){this.workItemWidget.workItemContactPanel("enableDisbleBtnOnTransfer",isTransferClicked)},destroy:function(){var that=this;this.workItemWidget.workItemContactPanel("destroy"),IC_Validation.isValidObject(this.dispPanel)&&this.dispPanel.slideUp(250,function(){that.dispPanel.remove(),that.dispositionPanel=""}),IC_Validation.isValidObject(this.contactResultPanel)&&(this.contactResultNotesPanel="",this.contactResultPanel.remove()),this.workItemWidget.remove()}})}(jQuery);