<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <decisions>
        <description>Update Case record type when creating via chat</description>
        <name>Case_Origin_is_Chat</name>
        <label>Case Origin is Chat</label>
        <locationX>182</locationX>
        <locationY>3911</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_origin_is_Chat</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Chat</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_record_type</targetReference>
            </connector>
            <label>Yes, origin is Chat</label>
        </rules>
    </decisions>
    <decisions>
        <description>If incoming brand is Heritage Ecomm, change to Van Heusen</description>
        <name>decBrand_is_Heritage_Brand</name>
        <label>Brand is Heritage Brand?</label>
        <locationX>182</locationX>
        <locationY>1187</locationY>
        <defaultConnector>
            <targetReference>decCase_Status_is_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resYes_Heritage_Brand</name>
            <conditionLogic>(1 OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Brand__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>8</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Brand__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>9</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Phone</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Brand_to_Van_Heusen</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes, Heritage Brand</label>
        </rules>
    </decisions>
    <decisions>
        <name>decCase_EmailToAddress_is_blank</name>
        <label>Case.EmailToAddress is blank?</label>
        <locationX>182</locationX>
        <locationY>287</locationY>
        <defaultConnector>
            <targetReference>decCase_Status_is_Resolved</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resYes_EmailToAddress_is_blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.emailToAddress__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Source:EmailMessage.ToAddress</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>EmailToAddressLengthCheck</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_EmailToAddress</targetReference>
            </connector>
            <label>Yes, EmailToAddress is blank</label>
        </rules>
    </decisions>
    <decisions>
        <description>Used to track the last time a status was changed to open in order to properly assign case to either a zQueue or the originating queue.</description>
        <name>decCase_Status_is_Changed</name>
        <label>Case Status is Changed</label>
        <locationX>182</locationX>
        <locationY>1487</locationY>
        <defaultConnector>
            <targetReference>decCase_Type_is_Privacy</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resYes_Status_is_Changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Timestamp_Last_Status_Change_field</targetReference>
            </connector>
            <label>Yes, Status is Changed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Sets &quot;Resolve Date&quot; on Case if null</description>
        <name>decCase_Status_is_Resolved</name>
        <label>Case Status is Resolved</label>
        <locationX>182</locationX>
        <locationY>587</locationY>
        <defaultConnector>
            <targetReference>decSupplied_Name_is_changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resStatus_changed_to_Resolved</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Resolved_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_Case_Resolved_Date</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Status changed to Resolved</label>
        </rules>
    </decisions>
    <decisions>
        <description>If case from a webform has no subject, set it as the first 150 words of the description.</description>
        <name>decCase_Subject_is_null</name>
        <label>Case Subject is null</label>
        <locationX>182</locationX>
        <locationY>2603</locationY>
        <defaultConnector>
            <targetReference>decPhone_Case_is_Open</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resSubject_is_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Description_READONLY__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Subject</targetReference>
            </connector>
            <label>Subject is null</label>
        </rules>
    </decisions>
    <decisions>
        <description>Sets Case Record Type based on Type and Sub Type field values</description>
        <name>decCase_Type_is_Marketing</name>
        <label>Case Type is Marketing</label>
        <locationX>182</locationX>
        <locationY>2303</locationY>
        <defaultConnector>
            <targetReference>decCase_Subject_is_null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resType_is_Marketing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Marketing</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Unsubscribe</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_record_type_to_Support_Case</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Type is Marketing</label>
        </rules>
    </decisions>
    <decisions>
        <description>Sets Case Record Type based on Type and Sub Type field values</description>
        <name>decCase_Type_is_Privacy</name>
        <label>Case Type is &#39;Privacy&#39;</label>
        <locationX>182</locationX>
        <locationY>1787</locationY>
        <defaultConnector>
            <targetReference>Get_Support_Case_Case_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resType_is_Privacy</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Privacy</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Access My Data</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Sub_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Delete My Data</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Privacy_Request_Case_Record_Type</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Type is Privacy</label>
        </rules>
    </decisions>
    <decisions>
        <description>when case is originated through phone and status is new, set the status to open</description>
        <name>decPhone_Case_is_Open</name>
        <label>Phone Case is Open</label>
        <locationX>182</locationX>
        <locationY>2903</locationY>
        <defaultConnector>
            <targetReference>Webform_Support_Case_is_created</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resPhone_Case_is_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Phone</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Status_to_Open</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Phone Case is Open</label>
        </rules>
    </decisions>
    <decisions>
        <name>decStatus_is_Not_New_and_Not_Open_and_Owner_is_Queue</name>
        <label>Status is Not New and Not Open and Owner is Queue</label>
        <locationX>182</locationX>
        <locationY>3611</locationY>
        <defaultConnector>
            <targetReference>Case_Origin_is_Chat</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resYes_Not_New_Open_and_Queue_Owned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fIsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support_Case</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Resolution_Code__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Rejected Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Spam_Queue.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Owner_to_Last_Modified_User</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Yes, Not New/Open and Queue-Owned</label>
        </rules>
    </decisions>
    <decisions>
        <description>Sets First Name and Last Name on Case if SuppliedName isChanged</description>
        <name>decSupplied_Name_is_changed</name>
        <label>Supplied Name is changed?</label>
        <locationX>182</locationX>
        <locationY>887</locationY>
        <defaultConnector>
            <targetReference>decBrand_is_Heritage_Brand</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>resYes_SuppliedName_ischanged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SuppliedName</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Supplied_First_Last_Name_fields</targetReference>
            </connector>
            <label>Yes, SuppliedName ischanged</label>
        </rules>
    </decisions>
    <decisions>
        <description>This Rule updates all the READONLY fields.</description>
        <name>Webform_Support_Case_is_created</name>
        <label>Webform Support Case is created</label>
        <locationX>182</locationX>
        <locationY>3203</locationY>
        <defaultConnector>
            <targetReference>Get_Spam_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Webform_Case_is_created</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Web</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support_Case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Web_Form_READONLY_Fields_update</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Webform Case is created</label>
        </rules>
    </decisions>
    <description>Handles many fast field updates for Case object</description>
    <environments>Default</environments>
    <formulas>
        <name>EmailToAddressLengthCheck</name>
        <dataType>Boolean</dataType>
        <expression>LEN({!varCaseToUpdate.Source:EmailMessage.ToAddress})&lt;=255</expression>
    </formulas>
    <formulas>
        <name>fCaseChannel</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.Channel__c})</expression>
    </formulas>
    <formulas>
        <name>fCaseCountryofResidence</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.Country_of_Residence__c})</expression>
    </formulas>
    <formulas>
        <name>fCaseDescription</name>
        <dataType>String</dataType>
        <expression>{!$Record.Description}</expression>
    </formulas>
    <formulas>
        <name>fCaseIsExistingPurchase</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.Is_Existing_Purchase__c})</expression>
    </formulas>
    <formulas>
        <name>fCaseStateofResidence</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.State_of_Residence__c})</expression>
    </formulas>
    <formulas>
        <name>fCaseSubject</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Record.Description_READONLY__c} , 150)</expression>
    </formulas>
    <formulas>
        <name>fCaseSubType</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.Sub_Type__c})</expression>
    </formulas>
    <formulas>
        <name>fCaseSuppliedName</name>
        <dataType>String</dataType>
        <expression>{!$Record.SuppliedName}</expression>
    </formulas>
    <formulas>
        <name>fCaseSuppliedPhone</name>
        <dataType>String</dataType>
        <expression>{!$Record.SuppliedPhone}</expression>
    </formulas>
    <formulas>
        <name>fCaseTommyAdaptive</name>
        <dataType>String</dataType>
        <expression>IF({!$Record.Tommy_Adaptive__c}=TRUE,&#39;Yes&#39;,&#39;No&#39;)</expression>
    </formulas>
    <formulas>
        <name>fCaseType</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.Type})</expression>
    </formulas>
    <formulas>
        <name>fCaseWebEmail</name>
        <dataType>String</dataType>
        <expression>{!$Record.SuppliedEmail}</expression>
    </formulas>
    <formulas>
        <name>fIsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>fSuppliedFirstName</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Record.SuppliedName}, FIND(&quot; &quot;, {!$Record.SuppliedName} ))</expression>
    </formulas>
    <formulas>
        <name>fSuppliedLastName</name>
        <dataType>String</dataType>
        <expression>MID( {!$Record.SuppliedName} , FIND(&quot; &quot;, {!$Record.SuppliedName} ), LEN({!$Record.SuppliedName} ) - 1)</expression>
    </formulas>
    <interviewLabel>Case: Before Save {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case: Before Save</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Privacy_Request_Case_Record_Type</name>
        <label>Get &#39;Privacy Request&#39; Case Record Type</label>
        <locationX>50</locationX>
        <locationY>1895</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_record_type_to_Privacy_Request</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Privacy_Request</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Spam_Queue</name>
        <label>Get Spam Queue</label>
        <locationX>182</locationX>
        <locationY>3503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decStatus_is_Not_New_and_Not_Open_and_Owner_is_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Spam_Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Support_Case_Case_Record_Type</name>
        <label>Get &#39;Support Case&#39; Case Record Type</label>
        <locationX>182</locationX>
        <locationY>2195</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decCase_Type_is_Marketing</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Support_Case</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Populate_Case_Resolved_Date</name>
        <label>Populate Case Resolved Date</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <connector>
            <targetReference>decSupplied_Name_is_changed</targetReference>
        </connector>
        <inputAssignments>
            <field>Resolved_Date__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Brand_to_Van_Heusen</name>
        <label>Set Brand to Van Heusen</label>
        <locationX>50</locationX>
        <locationY>1295</locationY>
        <connector>
            <targetReference>decCase_Status_is_Changed</targetReference>
        </connector>
        <inputAssignments>
            <field>Brand__c</field>
            <value>
                <stringValue>5</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Owner_to_Last_Modified_User</name>
        <label>Set Owner to Last Modified User</label>
        <locationX>50</locationX>
        <locationY>3719</locationY>
        <connector>
            <targetReference>Case_Origin_is_Chat</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.LastModifiedById</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Timestamp_Last_Status_Change_field</name>
        <label>Timestamp &#39;Last Status Change&#39; field</label>
        <locationX>50</locationX>
        <locationY>1595</locationY>
        <connector>
            <targetReference>decCase_Type_is_Privacy</targetReference>
        </connector>
        <inputAssignments>
            <field>Last_Status_Change__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_record_type</name>
        <label>Update Case record type</label>
        <locationX>50</locationX>
        <locationY>4019</locationY>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Support_Case_Case_Record_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_record_type_to_Privacy_Request</name>
        <label>Update Case record type to &#39;Privacy Request&#39;</label>
        <locationX>50</locationX>
        <locationY>2003</locationY>
        <connector>
            <targetReference>Get_Support_Case_Case_Record_Type</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Privacy_Request_Case_Record_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_record_type_to_Support_Case</name>
        <label>Update Case record type to &#39;Support Case&#39;</label>
        <locationX>50</locationX>
        <locationY>2411</locationY>
        <connector>
            <targetReference>decCase_Subject_is_null</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Support_Case_Case_Record_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Status_to_Open</name>
        <label>Update Case Status to Open</label>
        <locationX>50</locationX>
        <locationY>3011</locationY>
        <connector>
            <targetReference>Webform_Support_Case_is_created</targetReference>
        </connector>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>If case from a webform has no subject, set it as the first 150 words of the description.</description>
        <name>Update_Case_Subject</name>
        <label>Update Case Subject</label>
        <locationX>50</locationX>
        <locationY>2711</locationY>
        <connector>
            <targetReference>decPhone_Case_is_Open</targetReference>
        </connector>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>fCaseSubject</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_EmailToAddress</name>
        <label>Update EmailToAddress</label>
        <locationX>50</locationX>
        <locationY>395</locationY>
        <connector>
            <targetReference>decCase_Status_is_Resolved</targetReference>
        </connector>
        <inputAssignments>
            <field>emailToAddress__c</field>
            <value>
                <elementReference>$Record.Source:EmailMessage.ToAddress</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Supplied_First_Last_Name_fields</name>
        <label>Update Supplied First/Last Name fields</label>
        <locationX>50</locationX>
        <locationY>995</locationY>
        <connector>
            <targetReference>decBrand_is_Heritage_Brand</targetReference>
        </connector>
        <inputAssignments>
            <field>Supplied_First_Name__c</field>
            <value>
                <elementReference>fSuppliedFirstName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Supplied_Last_Name__c</field>
            <value>
                <elementReference>fSuppliedLastName</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>This updates all the READONLY fields.</description>
        <name>Update_Web_Form_READONLY_Fields_update</name>
        <label>Update Web Form READONLY Fields</label>
        <locationX>50</locationX>
        <locationY>3311</locationY>
        <connector>
            <targetReference>Get_Spam_Queue</targetReference>
        </connector>
        <inputAssignments>
            <field>Channel_READONLY__c</field>
            <value>
                <elementReference>fCaseChannel</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Country_of_Residence_READONLY__c</field>
            <value>
                <elementReference>fCaseCountryofResidence</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description_READONLY__c</field>
            <value>
                <elementReference>fCaseDescription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Is_Existing_Purchase_READONLY__c</field>
            <value>
                <elementReference>fCaseIsExistingPurchase</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Is_Tommy_Adaptive_READONLY__c</field>
            <value>
                <elementReference>fCaseTommyAdaptive</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>State_of_Residence_READONLY__c</field>
            <value>
                <elementReference>fCaseStateofResidence</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Sub_Type_READONLY__c</field>
            <value>
                <elementReference>fCaseSubType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type_READONLY__c</field>
            <value>
                <elementReference>fCaseType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Web_Email_READONLY__c</field>
            <value>
                <elementReference>fCaseWebEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Web_Name_READONLY__c</field>
            <value>
                <elementReference>fCaseSuppliedName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Web_Phone_READONLY__c</field>
            <value>
                <elementReference>fCaseSuppliedPhone</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>decCase_EmailToAddress_is_blank</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>100</triggerOrder>
    <variables>
        <name>varCaseToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
